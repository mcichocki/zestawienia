version: '3'

networks:
    orders-dev:

services:

    # nginx
    orders-nginx-service:
        image: nginx:stable-alpine
        container_name: orders-nginx-container
        ports:
            - "8087:80"
        environment:
            - TZ=Europe/Warsaw    
        volumes:
            - ./app:/var/www/project
            - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
            - "/etc/localtime:/etc/localtime:ro"
            - "/etc/timezone:/etc/timezone:ro"
        depends_on:
            - orders-php-service
            - orders-mysql-service
        networks:
            - orders-dev

    # php
    orders-php-service:
        build:
            context: .
            dockerfile: ./php/Dockerfile
        container_name: orders-php-container
        ports:
            - "9007:9000"
        volumes:
            - ./app:/var/www/project
            - ./php/custom.ini:/usr/local/etc/php/conf.d/custom.ini
        networks:
            - orders-dev

    # mysql
    orders-mysql-service:
        image: mysql:8
        container_name: orders-mysql-container
        ports:
            - "4307:3306"
        volumes:
            - ./mysql:/var/lib/mysql
        command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
        restart: always # always restart unless stopped manually
        environment:
            MYSQL_ROOT_PASSWORD: secret
            MYSQL_PASSWORD: secret
        networks:
            - orders-dev

    # node
    orders-node-service:
        image: node:16
        container_name: orders-node-container
        volumes:
            - ./app:/var/www/project
        working_dir: /var/www/project
        networks:
            - orders-dev

    #https://stackoverflow.com/questions/31746182/docker-compose-wait-for-container-x-before-starting-y
    orders-rabbitmq-service:
        #    image: rabbitmq
        build:
            context: .
            dockerfile: rabbitmq/Dockerfile
        container_name: orders-rabbitmq-container
        ports:
            - "15672:15672"
            - "5672:5672"
        healthcheck:
            test: [ "CMD", "curl", "-f", "http://localhost:15672" ]
            interval: 30s
            timeout: 10s
            retries: 5
        volumes:
            - rabbitmq-data:/var/lib/rabbitmq
        networks:
            - orders-dev
volumes:
    rabbitmq-data: